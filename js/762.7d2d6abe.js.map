{"version":3,"file":"js/762.7d2d6abe.js","mappings":"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","sources":["webpack://picross/./node_modules/core-js/internals/a-callable.js","webpack://picross/./node_modules/core-js/internals/an-object.js","webpack://picross/./node_modules/core-js/internals/array-includes.js","webpack://picross/./node_modules/core-js/internals/array-set-length.js","webpack://picross/./node_modules/core-js/internals/classof-raw.js","webpack://picross/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://picross/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://picross/./node_modules/core-js/internals/create-property-descriptor.js","webpack://picross/./node_modules/core-js/internals/define-built-in.js","webpack://picross/./node_modules/core-js/internals/define-global-property.js","webpack://picross/./node_modules/core-js/internals/descriptors.js","webpack://picross/./node_modules/core-js/internals/document-all.js","webpack://picross/./node_modules/core-js/internals/document-create-element.js","webpack://picross/./node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack://picross/./node_modules/core-js/internals/engine-user-agent.js","webpack://picross/./node_modules/core-js/internals/engine-v8-version.js","webpack://picross/./node_modules/core-js/internals/enum-bug-keys.js","webpack://picross/./node_modules/core-js/internals/export.js","webpack://picross/./node_modules/core-js/internals/fails.js","webpack://picross/./node_modules/core-js/internals/function-bind-native.js","webpack://picross/./node_modules/core-js/internals/function-call.js","webpack://picross/./node_modules/core-js/internals/function-name.js","webpack://picross/./node_modules/core-js/internals/function-uncurry-this.js","webpack://picross/./node_modules/core-js/internals/get-built-in.js","webpack://picross/./node_modules/core-js/internals/get-method.js","webpack://picross/./node_modules/core-js/internals/global.js","webpack://picross/./node_modules/core-js/internals/has-own-property.js","webpack://picross/./node_modules/core-js/internals/hidden-keys.js","webpack://picross/./node_modules/core-js/internals/ie8-dom-define.js","webpack://picross/./node_modules/core-js/internals/indexed-object.js","webpack://picross/./node_modules/core-js/internals/inspect-source.js","webpack://picross/./node_modules/core-js/internals/internal-state.js","webpack://picross/./node_modules/core-js/internals/is-array.js","webpack://picross/./node_modules/core-js/internals/is-callable.js","webpack://picross/./node_modules/core-js/internals/is-forced.js","webpack://picross/./node_modules/core-js/internals/is-null-or-undefined.js","webpack://picross/./node_modules/core-js/internals/is-object.js","webpack://picross/./node_modules/core-js/internals/is-pure.js","webpack://picross/./node_modules/core-js/internals/is-symbol.js","webpack://picross/./node_modules/core-js/internals/length-of-array-like.js","webpack://picross/./node_modules/core-js/internals/make-built-in.js","webpack://picross/./node_modules/core-js/internals/math-trunc.js","webpack://picross/./node_modules/core-js/internals/object-define-property.js","webpack://picross/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://picross/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://picross/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://picross/./node_modules/core-js/internals/object-is-prototype-of.js","webpack://picross/./node_modules/core-js/internals/object-keys-internal.js","webpack://picross/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://picross/./node_modules/core-js/internals/ordinary-to-primitive.js","webpack://picross/./node_modules/core-js/internals/own-keys.js","webpack://picross/./node_modules/core-js/internals/require-object-coercible.js","webpack://picross/./node_modules/core-js/internals/shared-key.js","webpack://picross/./node_modules/core-js/internals/shared-store.js","webpack://picross/./node_modules/core-js/internals/shared.js","webpack://picross/./node_modules/core-js/internals/symbol-constructor-detection.js","webpack://picross/./node_modules/core-js/internals/to-absolute-index.js","webpack://picross/./node_modules/core-js/internals/to-indexed-object.js","webpack://picross/./node_modules/core-js/internals/to-integer-or-infinity.js","webpack://picross/./node_modules/core-js/internals/to-length.js","webpack://picross/./node_modules/core-js/internals/to-object.js","webpack://picross/./node_modules/core-js/internals/to-primitive.js","webpack://picross/./node_modules/core-js/internals/to-property-key.js","webpack://picross/./node_modules/core-js/internals/try-to-string.js","webpack://picross/./node_modules/core-js/internals/uid.js","webpack://picross/./node_modules/core-js/internals/use-symbol-as-uid.js","webpack://picross/./node_modules/core-js/internals/v8-prototype-define-bug.js","webpack://picross/./node_modules/core-js/internals/weak-map-basic-detection.js","webpack://picross/./node_modules/core-js/internals/well-known-symbol.js","webpack://picross/./node_modules/core-js/modules/es.array.push.js","webpack://picross/./src/boards/coherentRandom.js","webpack://picross/../src/constants.ts","webpack://picross/../src/assert.ts","webpack://picross/../src/crypt.ts","webpack://picross/../src/deepCopy.ts","webpack://picross/../src/global.ts","webpack://picross/../src/defaults.ts","webpack://picross/../src/deferred.ts","webpack://picross/../src/emulator.ts","webpack://picross/../src/environment.ts","webpack://picross/../src/errors.ts","webpack://picross/../src/json.ts","webpack://picross/../src/jwt.ts","webpack://picross/../src/obj.ts","webpack://picross/../src/query.ts","webpack://picross/../src/sha1.ts","webpack://picross/../src/validation.ts","webpack://picross/../src/utf8.ts","webpack://picross/../src/compat.ts","webpack://picross/../../src/component.ts","webpack://picross/../../src/constants.ts","webpack://picross/../../src/provider.ts","webpack://picross/../../src/component_container.ts","webpack://picross/../../src/logger.ts","webpack://picross/./node_modules/idb/build/wrap-idb-value.js","webpack://picross/./node_modules/idb/build/index.js","webpack://picross/../../src/platformLoggerService.ts","webpack://picross/../../src/internal.ts","webpack://picross/../../src/errors.ts","webpack://picross/../../src/firebaseApp.ts","webpack://picross/../../src/api.ts","webpack://picross/../../src/indexeddb.ts","webpack://picross/../../src/heartbeatService.ts","webpack://picross/../../src/registerCoreComponents.ts","webpack://picross/../../src/index.ts","webpack://picross/../../index.ts","webpack://picross/../src/core/version.ts","webpack://picross/../src/core/storage/DOMStorageWrapper.ts","webpack://picross/../src/core/storage/MemoryStorage.ts","webpack://picross/../src/core/storage/storage.ts","webpack://picross/../src/core/util/util.ts","webpack://picross/../src/core/AppCheckTokenProvider.ts","webpack://picross/../src/core/AuthTokenProvider.ts","webpack://picross/../src/realtime/Constants.ts","webpack://picross/../src/core/RepoInfo.ts","webpack://picross/../src/core/stats/StatsCollection.ts","webpack://picross/../src/core/stats/StatsManager.ts","webpack://picross/../src/realtime/polling/PacketReceiver.ts","webpack://picross/../src/realtime/BrowserPollConnection.ts","webpack://picross/../src/realtime/WebSocketConnection.ts","webpack://picross/../src/realtime/TransportManager.ts","webpack://picross/../src/realtime/Connection.ts","webpack://picross/../src/core/ServerActions.ts","webpack://picross/../src/core/util/EventEmitter.ts","webpack://picross/../src/core/util/OnlineMonitor.ts","webpack://picross/../src/core/util/Path.ts","webpack://picross/../src/core/util/VisibilityMonitor.ts","webpack://picross/../src/core/PersistentConnection.ts","webpack://picross/../src/core/snap/Node.ts","webpack://picross/../src/core/snap/indexes/Index.ts","webpack://picross/../src/core/snap/indexes/KeyIndex.ts","webpack://picross/../src/core/util/SortedMap.ts","webpack://picross/../src/core/snap/comparators.ts","webpack://picross/../src/core/snap/snap.ts","webpack://picross/../src/core/snap/LeafNode.ts","webpack://picross/../src/core/snap/indexes/PriorityIndex.ts","webpack://picross/../src/core/snap/childSet.ts","webpack://picross/../src/core/snap/IndexMap.ts","webpack://picross/../src/core/snap/ChildrenNode.ts","webpack://picross/../src/core/snap/nodeFromJSON.ts","webpack://picross/../src/core/snap/indexes/PathIndex.ts","webpack://picross/../src/core/snap/indexes/ValueIndex.ts","webpack://picross/../src/core/view/Change.ts","webpack://picross/../src/core/view/filter/IndexedFilter.ts","webpack://picross/../src/core/view/filter/RangedFilter.ts","webpack://picross/../src/core/view/filter/LimitedFilter.ts","webpack://picross/../src/core/view/QueryParams.ts","webpack://picross/../src/core/ReadonlyRestClient.ts","webpack://picross/../src/core/SnapshotHolder.ts","webpack://picross/../src/core/SparseSnapshotTree.ts","webpack://picross/../src/core/stats/StatsListener.ts","webpack://picross/../src/core/stats/StatsReporter.ts","webpack://picross/../src/core/operation/Operation.ts","webpack://picross/../src/core/operation/AckUserWrite.ts","webpack://picross/../src/core/operation/ListenComplete.ts","webpack://picross/../src/core/operation/Overwrite.ts","webpack://picross/../src/core/operation/Merge.ts","webpack://picross/../src/core/view/CacheNode.ts","webpack://picross/../src/core/view/EventGenerator.ts","webpack://picross/../src/core/view/ViewCache.ts","webpack://picross/../src/core/util/ImmutableTree.ts","webpack://picross/../src/core/CompoundWrite.ts","webpack://picross/../src/core/WriteTree.ts","webpack://picross/../src/core/view/ChildChangeAccumulator.ts","webpack://picross/../src/core/view/CompleteChildSource.ts","webpack://picross/../src/core/view/ViewProcessor.ts","webpack://picross/../src/core/view/View.ts","webpack://picross/../src/core/SyncPoint.ts","webpack://picross/../src/core/SyncTree.ts","webpack://picross/../src/core/util/ServerValues.ts","webpack://picross/../src/core/util/Tree.ts","webpack://picross/../src/core/util/validation.ts","webpack://picross/../src/core/view/EventQueue.ts","webpack://picross/../src/core/Repo.ts","webpack://picross/../src/core/util/libs/parser.ts","webpack://picross/../src/core/util/NextPushId.ts","webpack://picross/../src/core/view/Event.ts","webpack://picross/../src/core/view/EventRegistration.ts","webpack://picross/../src/api/Reference_impl.ts","webpack://picross/../src/api/Database.ts","webpack://picross/../src/register.ts","webpack://picross/../src/api/test_access.ts","webpack://picross/../src/index.ts","webpack://picross/./config/firebase/index.mjs","webpack://picross/./service/player.js","webpack://picross/./src/boards/magnet.js","webpack://picross/./src/database/firebase/index.js"],"sourcesContent":["var isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n","var isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","var hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var isCallable = require('../internals/is-callable');\nvar definePropertyModule = require('../internals/object-define-property');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n","var global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","var aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","module.exports = {};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","var $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","var isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","module.exports = false;\n","var getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar $String = String;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\nvar stringSlice = uncurryThis(''.slice);\nvar replace = uncurryThis(''.replace);\nvar join = uncurryThis([].join);\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (stringSlice($String(name), 0, 7) === 'Symbol(') {\n    name = '[' + replace($String(name), /^Symbol\\(([^)]*)\\)/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","var call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","var isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.30.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.30.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","var call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 and Safari <= 15.4, FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar properErrorOnNonWritableLength = function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n};\n\nvar FORCED = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n","export default function (rows, columns) {\r\n\r\n    // Créer une grille vide\r\n    const grid = new Array(rows).fill(null).map(() => new Array(columns).fill(null));\r\n\r\n    // Remplir aléatoirement les cases de la grille\r\n    for (let i = 0; i < rows; i++) {\r\n        for (let j = 0; j < columns; j++) {\r\n            if (Math.random() < 0.5) {\r\n                grid[i][j] = 1;\r\n            } else {\r\n                grid[i][j] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Calculer les indices des lignes\r\n    const rowIndices = [];\r\n    for (let i = 0; i < rows; i++) {\r\n        let currentRun = 0;\r\n        const rowIndicesForRow = [];\r\n        for (let j = 0; j < columns; j++) {\r\n            if (grid[i][j] === 1) {\r\n                currentRun++;\r\n            } else if (currentRun > 0) {\r\n                rowIndicesForRow.push(currentRun);\r\n                currentRun = 0;\r\n            }\r\n        }\r\n        if (currentRun > 0) {\r\n            rowIndicesForRow.push(currentRun);\r\n        }\r\n        rowIndices.push(rowIndicesForRow);\r\n    }\r\n\r\n    // Calculer les indices des colonnes\r\n    const columnIndices = [];\r\n    for (let j = 0; j < columns; j++) {\r\n        let currentRun = 0;\r\n        const columnIndicesForColumn = [];\r\n        for (let i = 0; i < rows; i++) {\r\n            if (grid[i][j] === 1) {\r\n                currentRun++;\r\n            } else if (currentRun > 0) {\r\n                columnIndicesForColumn.push(currentRun);\r\n                currentRun = 0;\r\n            }\r\n        }\r\n        if (currentRun > 0) {\r\n            columnIndicesForColumn.push(currentRun);\r\n        }\r\n        columnIndices.push(columnIndicesForColumn);\r\n    }\r\n\r\n    // Retourner la grille et les indices\r\n    return grid;\r\n}","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n/**\n * SDK_VERSION should be set before any database instance is created\n * @internal\n */\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false,\n    public readonly isUsingEmulator: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\n      this.myIFrame.doc.body.textContent = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        const handshakePayload = {\n          ...(payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          })\n        };\n        if (this.repoInfo_.isUsingEmulator) {\n          // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\n          handshakePayload.h = this.repoInfo_.host;\n        }\n        this.onHandshake_(handshakePayload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams,\n    /*isUsingEmulator=*/ true\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  if (!db._instanceStarted) {\n    const emulator = getDefaultEmulatorHostnameAndPort('database');\n    if (emulator) {\n      connectDatabaseEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","const PROJECT_ID = 'picross-75f2e';\r\nconst REGION = 'default-rtdb.europe-west1';\r\n\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyD5Nr22Zt-eb1hof08Ce_4ycpVYPY87SS0\",\r\n    authDomain: `${PROJECT_ID}-.firebaseapp.com`,\r\n    // The value of `databaseURL` depends on the location of the d\r\n    databaseURL: `https://${PROJECT_ID}-${REGION}.firebasedatabase.app`,\r\n    projectId: `${PROJECT_ID}`,\r\n    storageBucket: `${PROJECT_ID}.appspot.com`,\r\n    messagingSenderId: `99864200918`,\r\n    appId: `1:99864200918:web:ded6091df691c9b33feb77`,\r\n};","export class Player {\r\n\r\n    constructor({ login }) {\r\n        \r\n        this.login = login;\r\n\r\n        this.isReady = false;\r\n\r\n        this.life = 3;\r\n        this.board = [\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        ];\r\n\r\n        this.boardToClear = [];\r\n    }\r\n}","export default function () {\r\n    return [\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n    ];\r\n}","import { initializeApp } from 'firebase/app';\r\n\r\nimport { getDatabase, ref, remove, push, get, update, updateDoc, onChildAdded, onChildRemoved, onValue } from 'firebase/database';\r\n\r\nimport { firebaseConfig } from './../../../config/firebase/index.mjs';\r\n\r\nexport const firebaseApp   = initializeApp(firebaseConfig);\r\nexport const firebaseStore = getDatabase(firebaseApp);\r\n\r\nimport { Player } from './../../../service/player.js';\r\n\r\nimport coherentRandom from './../../boards/coherentRandom';\r\nimport magnet from './../../boards/magnet';\r\n\r\nexport const addPlayer = async data => {\r\n\r\n    return await push(ref(firebaseStore, 'users/'), new Player(data));\r\n}\r\n\r\nexport const sendEvent = async data => {\r\n\r\n    return await push(ref(firebaseStore, 'events/'), data);\r\n};\r\n\r\nexport const listenEvents = callback => {\r\n\r\n    onChildAdded(ref(firebaseStore, 'events/'), event => {\r\n\r\n        const val = event.val()\r\n\r\n        val.views = val.views ? Object.values(val.views) : [];\r\n\r\n        callback({\r\n            ...{ id : event.key },\r\n            ...val\r\n        });\r\n    });\r\n}\r\n\r\nexport const deleteEvents = async () => {\r\n    return await remove(ref(firebaseStore, `events/`));\r\n}\r\n\r\nexport const setEventAsView = async (eventId, playerId) => {\r\n    return await push(ref(firebaseStore, `events/${eventId}/views`), playerId);\r\n}\r\n\r\nexport const onChildAddedPlayers = callback => {\r\n\r\n    onChildAdded(ref(firebaseStore, 'users/'), player => {\r\n        callback({\r\n            player : {\r\n                ...{ id : player.key },\r\n                ...player.val()\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport const onValuePlayers = callback => {\r\n\r\n    onValue(ref(firebaseStore, 'users/'), players => {\r\n        callback({\r\n            players : transformObject(players.val())\r\n        });\r\n    });\r\n}\r\n\r\nexport const onChildRemovedPlayers = callback => {\r\n\r\n    onChildRemoved(ref(firebaseStore, 'users/'), player => {\r\n        callback({\r\n            player : {\r\n                ...{ id : player.key },\r\n                ...player.val()\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport const onValuePlayerBoard = (id, callback) => {\r\n\r\n    onValue(ref(firebaseStore, `users/${id}/board`), board => {\r\n        callback(board.val());\r\n    });\r\n}\r\n\r\nexport const deletePlayers = async () => {\r\n    return await remove(ref(firebaseStore, `users/`));\r\n}\r\n\r\nexport const getPlayer = async id => {\r\n\r\n    const player = await get(ref(firebaseStore, `users/${id}`));\r\n\r\n    if (!player.val()) {\r\n        return false;\r\n    }\r\n\r\n    return {\r\n        ...{ id : player.key },\r\n        ...player.val()\r\n    };\r\n}\r\n\r\nexport const deletePlayer = async id => {\r\n\r\n    return await remove(ref(firebaseStore, `users/${id}`));\r\n}\r\n\r\nexport const setPlayerReady = async (id, value) => {\r\n\r\n    return await update(ref(firebaseStore, `users/${id}`), {\r\n        isReady : value\r\n    });\r\n}\r\n\r\nexport const giveBoardToClearToPlayers = async ids => {\r\n\r\n    const boardToClear = magnet(15, 15);\r\n\r\n    for await (const id of ids) {\r\n\r\n        await update(ref(firebaseStore, `users/${id}`), {\r\n            boardToClear : boardToClear\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetPlayersBoard = async ids => {\r\n\r\n    for await (const id of ids) {\r\n\r\n        await update(ref(firebaseStore, `users/${id}`), {\r\n            board : [\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            ]\r\n        })\r\n    }\r\n}\r\n\r\nexport const updatePlayerBoard = async data => {\r\n\r\n    const { id, board } = data;\r\n\r\n    await update(ref(firebaseStore, `users/${id}`), {\r\n        board : board\r\n    });\r\n}\r\n\r\nexport const updatePlayerBoardCell = async data => {\r\n\r\n    const { id, x, y, state } = data;\r\n\r\n    update(ref(firebaseStore, `users/${id}/board/${x}`), {\r\n        [y] : state\r\n    });\r\n}\r\n\r\nexport const updatePlayerLife = async data => {\r\n\r\n    const { id, life } = data;\r\n\r\n    update(ref(firebaseStore, `users/${id}`), {\r\n        life : life\r\n    });\r\n}\r\n\r\nfunction transformObject(data) {\r\n\r\n    if (!data) {\r\n        return;\r\n    }\r\n\r\n    return Object.entries(data).map(([id, value]) => {\r\n        \r\n        const obj = { id };\r\n        \r\n        Object.entries(value).forEach(([prop, val]) => {\r\n            obj[prop] = val;\r\n        });\r\n        \r\n        return obj;\r\n    });\r\n}"],"names":["isCallable","tryToString","$TypeError","TypeError","module","exports","argument","isObject","$String","String","toIndexedObject","toAbsoluteIndex","lengthOfArrayLike","createMethod","IS_INCLUDES","$this","el","fromIndex","value","O","length","index","includes","indexOf","DESCRIPTORS","isArray","getOwnPropertyDescriptor","Object","SILENT_ON_NON_WRITABLE_LENGTH_SET","undefined","this","defineProperty","writable","error","uncurryThis","toString","stringSlice","slice","it","hasOwn","ownKeys","getOwnPropertyDescriptorModule","definePropertyModule","target","source","exceptions","keys","f","i","key","createPropertyDescriptor","object","bitmap","enumerable","configurable","makeBuiltIn","defineGlobalProperty","options","simple","name","global","unsafe","nonConfigurable","nonWritable","fails","get","documentAll","document","all","IS_HTMLDDA","EXISTS","createElement","MAX_SAFE_INTEGER","navigator","userAgent","match","version","process","Deno","versions","v8","split","createNonEnumerableProperty","defineBuiltIn","copyConstructorProperties","isForced","FORCED","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","stat","prototype","dontCallGetSet","forced","sham","exec","test","bind","hasOwnProperty","NATIVE_BIND","call","Function","apply","arguments","FunctionPrototype","getDescriptor","PROPER","CONFIGURABLE","uncurryThisWithBind","fn","aFunction","namespace","method","aCallable","isNullOrUndefined","V","P","func","check","Math","globalThis","window","self","g","toObject","a","classof","$Object","propertyIsEnumerable","store","functionToString","inspectSource","set","has","NATIVE_WEAK_MAP","shared","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","WeakMap","enforce","getterFor","TYPE","state","type","metadata","facade","STATE","Array","$documentAll","replacement","feature","detection","data","normalize","POLYFILL","NATIVE","string","replace","toLowerCase","getBuiltIn","isPrototypeOf","USE_SYMBOL_AS_UID","$Symbol","toLength","obj","CONFIGURABLE_FUNCTION_NAME","InternalStateModule","enforceInternalState","getInternalState","join","CONFIGURABLE_LENGTH","TEMPLATE","getter","setter","arity","constructor","ceil","floor","trunc","x","n","IE8_DOM_DEFINE","V8_PROTOTYPE_DEFINE_BUG","anObject","toPropertyKey","$defineProperty","$getOwnPropertyDescriptor","ENUMERABLE","WRITABLE","Attributes","current","propertyIsEnumerableModule","internalObjectKeys","enumBugKeys","concat","getOwnPropertyNames","getOwnPropertySymbols","push","names","result","$propertyIsEnumerable","NASHORN_BUG","input","pref","val","valueOf","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","uid","SHARED","IS_PURE","mode","copyright","license","V8_VERSION","symbol","Symbol","toIntegerOrInfinity","max","min","integer","IndexedObject","requireObjectCoercible","number","isSymbol","getMethod","ordinaryToPrimitive","wellKnownSymbol","TO_PRIMITIVE","exoticToPrim","toPrimitive","id","postfix","random","NATIVE_SYMBOL","iterator","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","$","setArrayLength","doesNotExceedSafeInteger","INCORRECT_TO_LENGTH","properErrorOnNonWritableLength","proto","item","len","argCount","rows","columns","grid","fill","map","j","rowIndices","currentRun","rowIndicesForRow","columnIndices","columnIndicesForColumn","CONSTANTS","NODE_CLIENT","NODE_ADMIN","SDK_VERSION","assert","assertion","message","assertionError","Error","stringToByteArray$1","str","out","p","c","charCodeAt","byteArrayToString","bytes","pos","c1","fromCharCode","c2","c3","c4","u","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","charAt","haveByte4","byte4","DecodeBase64StringError","base64Encode","utf8Bytes","base64urlEncodeWithoutPadding","base64Decode","e","console","deepCopy","deepExtend","Date","dateValue","getTime","prop","isValidKey","getGlobal","getDefaultsFromGlobal","__FIREBASE_DEFAULTS__","getDefaultsFromEnvVariable","defaultsJsonString","JSON","parse","getDefaultsFromCookie","cookie","decoded","getDefaults","info","getDefaultEmulatorHost","productName","_a","_b","emulatorHosts","getDefaultEmulatorHostnameAndPort","host","separatorIndex","lastIndexOf","port","parseInt","substring","getDefaultAppConfig","config","Deferred","reject","resolve","promise","Promise","wrapCallback","callback","catch","createMockUserToken","token","projectId","header","alg","project","iat","sub","user_id","payload","assign","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","signature","stringify","getUA","isMobileCordova","isReactNative","isNodeSdk","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","open","onsuccess","close","deleteDatabase","onupgradeneeded","onerror","ERROR_NAME","FirebaseError","code","customData","super","setPrototypeOf","captureStackTrace","ErrorFactory","create","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","PATTERN","_","jsonEval","decode","claims","parts","isValidFormat","isAdmin","contains","safeGet","isEmpty","contextObj","res","deepEqual","b","aKeys","bKeys","k","aProp","bProp","thing","querystring","querystringParams","params","entries","forEach","arrayVal","encodeURIComponent","Sha1","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","compress_","buf","offset","W","t","d","update","lengthMinusBlock","inbuf","digest","totalBits","errorPrefix","fnName","argName","stringToByteArray","high","low","stringLength","getModularInstance","_delegate","Component","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","DEFAULT_ENTRY_NAME","Provider","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","getImmediate","optional","getComponent","setComponent","isComponentEager","instanceDeferred","clearInstance","delete","async","services","from","values","filter","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","normalizedDeferredIdentifier","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","normalizeIdentifierForFactory","ComponentContainer","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","args","logLevel","now","toISOString","Logger","_logLevel","_logHandler","_userLogHandler","setLogLevel","logHandler","userLogHandler","debug","log","warn","instanceOfAny","constructors","some","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","advance","continue","continuePrimaryKey","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","unlisten","removeEventListener","success","wrap","addEventListener","then","cacheDonePromiseForTransaction","tx","done","complete","DOMException","idbProxyTraps","receiver","objectStoreNames","objectStore","replaceTraps","wrapFunction","transaction","unwrap","storeNames","sort","transformCachableValue","Proxy","IDBRequest","newValue","openDB","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","readMethods","writeMethods","cachedMethods","targetFuncName","useIndex","isWrite","storeName","shift","oldTraps","PlatformLoggerServiceImpl","getPlatformInfoString","isVersionServiceProvider","library","logString","logger","PLATFORM_LOG_STRING","name$o","name$n","name$l","name$m","name$j","name$k","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$2","name$1","_apps","_components","_addComponent","app","_registerComponent","componentName","_getProvider","heartbeatController","triggerHeartbeat","ERRORS","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","initializeApp","rawConfig","existingApp","newApp","getApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","MAX_HEADER_BYTES","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","platformLogger","agent","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","overwrite","heartbeatsToSend","unsentEntries","extractHeartbeatsForHeader","headerString","today","heartbeatsCache","maxSize","heartbeatEntry","find","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","canUseIndexedDB","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","registerCoreComponents","version$1","setSDKVersion","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","remove","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","sha1Bytes","buildLogMessage_","varArgs","arg","firstLog_","enableLogging$1","logger_","persistent","logWrapper","prefix","fatal","warnIfPageIsSecure","location","protocol","isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","readyState","called","wrappedFn","body","setTimeout","attachEvent","MIN_NAME","MAX_NAME","nameCompare","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","splitStringBySize","segsize","dataSegs","each","doubleToIEEE754String","v","ebits","fbits","bias","s","ln","Infinity","abs","pow","LN2","round","bits","reverse","hexByteString","hexByte","substr","isChromeExtensionContentScript","href","isWindowsStoreApp","Windows","UI","errorForServerCode","query","reason","_path","toUpperCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","beingCrawled","search","setTimeoutNonBlocking","time","timeout","unrefTimer","AppCheckTokenProvider","appName_","appCheckProvider","appCheck","getToken","forceRefresh","addTokenChangeListener","listener","addTokenListener","notifyForInvalidToken","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN_RE","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","APP_CHECK_TOKEN_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","secure","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","isUsingEmulator","_host","_domain","internalHost","isCacheableHost","isCustomHost","newHost","toURLString","repoInfoNeedsQueryParam","repoInfo","repoInfoConnectionURL","connURL","pairs","StatsCollection","counters_","incrementCounter","amount","collections","reporters","statsManagerGetCollection","hashString","statsManagerGetOrCreateReporter","creatorFunction","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","toProcess","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","static","forceAllow_","forceDisallow_","markConnectionHealthy","shutdown_","myDisconnFrame","removeChild","send","dataStr","base64data","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","textContent","myID","myPW","newRequest_","size","theURL","curDataString","nextSeg","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript","onload","onreadystatechange","rstate","parentNode","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","oldAndroidRegex","oldAndroidMatch","parseFloat","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","ALL_TRANSPORTS","IS_TRANSPORT_INITIALIZED","globalTransportInitialized_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","transport","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","handshakePayload","h","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","pathString","onComplete","hash","merge","refreshAuthToken","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","context","on","validateEventType_","eventData","getInitialEvent","off","splice","et","OnlineMonitor","online_","currentlyOnline","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","pathSlice","begin","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","validationPathCheckValid","validationPathPush","validationPath","child","validationPathPop","last","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","getInstance","onVisible_","onOnline_","action","onResponse","curReqNum","r","initConnection_","q","_queryObject","outstandingGet","sendGet_","listen","currentHashFn","tag","queryId","_queryIdentifier","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","tryAppCheck","authMethod","requestData","cred","onAuthRevoked_","onAppCheckRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","interrupt","resume","delta","serverTimeOffset","normalizedPathString","statusCode","explanation","queries","clientName","NamedNode","node","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","KeyIndex","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE$2","setMaxNode$1","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","nodeFromJSON$1","MAX_NODE$1","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","setNodeFromJSON","setMaxNode","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","Default","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","Wrap","newIndex","next","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","endPost","MAX_NODE","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON","json","jsonLeaf","childData","children","childrenHavePriority","hinzeJsonObj","childSet","sortedChildSet","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","ValueIndex","VALUE_INDEX","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","changeChildMoved","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","startIsInclusive_","startAfterSet_","endIsInclusive_","endBeforeSet_","getStartPost","getEndPost","matches","isWithinStart","isWithinEnd","filtered","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","withinDirectionalStart","reverse_","withinEndPost","withinStartPost","withinDirectionalEnd","compareRes","rangedFilter_","limit_","getLimit","isViewFromLeft","fullLimitUpdateChild_","inRange","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","oldChildSnap","nextChild","getChildAfterChild","compareNext","remainsInWindow","newEventCache","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasLimit","hasAnchoredLimit","queryParamsGetNodeFilter","queryParams","queryParamsToRestQueryStringParameters","qs","orderBy","startParam","endParam","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","listenId","getListenId_","thisListen","queryStringParameters","restRequest_","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForEachTree","prefixPath","sparseSnapshotTreeForEachChild","tree","StatsListener","collection_","last_","newStats","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","OperationType","newOperationSourceUser","fromUser","fromServer","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForChanges","eventGenerator","changes","eventCache","eventRegistrations","events","moves","change","eventGeneratorGenerateEventsForType","registrations","filteredChanges","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","prevName","aWrapped","bWrapped","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","EmptyChildren","ImmutableTree","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","empty","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite","writeTreeChildWrites","newWriteTreeRef","writeTreeAddOverwrite","writeId","lastWriteId","allWrites","visibleWrites","writeTreeAddMerge","changedChildren","writeTreeGetWrite","record","writeTreeRemoveWrite","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","writeTreeResetTree_","writeRecord","writeTreeLayerTree_","writeTreeDefaultFilter_","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layeredCache","subMerge","writeTreeCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","writeTreeCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcCompleteChild","writeTreeShadowingWrite","writeTreeCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeRefCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","NoCompleteChildSource_","getCompleteChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","newViewProcessor","viewProcessorAssertIndexed","viewProcessor","viewProcessorApplyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","filterServerNode","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","viewProcessorRevertUserWrite","viewProcessorAckUserWrite","viewProcessorListenComplete","viewProcessorMaybeAddValueEvent","isLeafOrEmpty","oldCompleteSnap","viewProcessorGenerateEventCacheAfterServerEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","newEventSnap","viewProcessorCacheHasChild","curViewCache","viewProcessorApplyMerge","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","mergePath","serverCachePath","oldServerNode","serverChildren","View","initialViewCache","eventRegistrations_","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","viewGetServerCache","view","viewGetCompleteNode","viewGetCompleteServerCache","cache","viewIsEmpty","viewAddEventRegistration","eventRegistration","viewRemoveEventRegistration","cancelError","cancelEvents","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","viewApplyOperation","viewGenerateEventsForChanges_","viewGetInitialEvents","initialChanges","eventNode","referenceConstructor$1","referenceConstructor","SyncPoint","views","syncPointSetReferenceConstructor","syncPointGetReferenceConstructor","syncPointIsEmpty","syncPoint","syncPointApplyOperation","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","viewQueryId","_repo","syncPointGetQueryViews","syncPointGetCompleteServerCache","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","syncTreeSetReferenceConstructor","syncTreeGetReferenceConstructor","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","changeTree","fromObject","syncTreeAckUserWrite","needToReevaluate","syncTreeApplyServerOverwrite","syncTreeApplyServerMerge","syncTreeApplyListenComplete","syncTreeApplyTaggedListenComplete","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","op","syncTreeApplyTaggedOperation_","syncTreeRemoveEventRegistration","skipListenerDedup","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery","defaultTag","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","syncTreeRemoveTags_","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyTaggedQueryMerge","syncTreeAddEventRegistration","skipSetupListener","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","syncTreeGetNextQueryTag_","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","includeHiddenSets","syncTreeGetServerValue","serverCacheNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","splitIndex","maybeChildSyncPoint","childMap","completeView","_key","childViews","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","childQueries","queryToStop","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","unused","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeIsEmpty","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeForEachAncestor","treeGetPath","treeUpdateChild","childEmpty","childExists","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","validateFirebaseData","hasDotValue","hasActualChild","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","errorPrefix$1","validatePathString","argumentName","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","authOverride","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoOnServerInfoUpdate","statsReporter_","infoData_","infoSyncTree_","infoEvents","repoUpdateInfo","serverSyncTree_","repoServerTime","offsetNode","repoGenerateServerValues","taggedChildren","raw","taggedSnap","repoRerunTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoGetValue","cached","err","repoLog","repoSetWithPriority","newVal","newNodeUnresolved","clearEvents","repoCallOnCompleteCallback","repoAbortTransactions","repoUpdate","childrenToMerge","changedKey","changedValue","resolvedOnDisconnectTree","resolved","repoAddEventCallbackForQuery","repoRemoveEventCallbackForQuery","repoInterrupt","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","allRun","every","repoSendTransactionQueue","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","currentOutputSnapshotResolved","unwatcher","abortReason","rootMostTransactionNode","repoGetAncestorTransactionNode","repoRerunTransactionQueue","txnsToRerun","abortTransaction","currentNode","currentInputSnapshot","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","applyLocally","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","order","nodeQueue","to","repoAbortTransactionsOnNode","lastSent","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","segment","kv","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","colonInd","slashInd","questionMarkInd","hostWithoutPort","dotInd","PUSH_CHARS","nextPushId","lastPushTime","lastRandChars","duplicateTime","timeStampChars","DataEvent","snapshot","ref","getEventType","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","sameRepo","samePath","sameQueryIdentifier","toJSON","parentPath","DataSnapshot","_node","_index","childRef","exists","hasChildren","_checkNotDeleted","_root","thennablePushRef","pushRef","callbackContext","ValueEventRegistration","ChildEventRegistration","eventToCheck","cancelCallbackOrListenOptions","onlyOnce","onceCallback","dataSnapshot","onChildAdded","onChildRemoved","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerApplyEmulatorSettings","tokenProvider","repoManagerDatabaseFromApp","authProvider","dbUrl","databaseURL","isEmulator","dbEmulatorHost","authTokenProvider","repoManagerCreateRepo","Database","repoManagerDeleteRepo","appRepos","_repoInternal","_instanceStarted","_rootInternal","apiName","getDatabase","emulator","connectDatabaseEmulator","mockUserToken","registerDatabase","SDK_VERSION$1","simpleListen","echo","onEcho","PROJECT_ID","REGION","firebaseConfig","apiKey","authDomain","storageBucket","messagingSenderId","Player","login","isReady","life","board","boardToClear","firebaseApp","firebaseStore","addPlayer","sendEvent","listenEvents","deleteEvents","setEventAsView","eventId","playerId","onChildAddedPlayers","player","onValuePlayers","players","transformObject","onChildRemovedPlayers","onValuePlayerBoard","deletePlayers","getPlayer","deletePlayer","setPlayerReady","giveBoardToClearToPlayers","magnet","ids","resetPlayersBoard","updatePlayerBoard","updatePlayerBoardCell","y","updatePlayerLife"],"sourceRoot":""}